# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateUserInput {
  cognitoUuid: String!
  email: String!
  role: String
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteFileInput {
  uuid: ID!
}

input DeleteUserInput {
  uuid: ID!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  deletePrivateFile(deleteFileInput: DeleteFileInput!): User!
  deletePublicFile(deleteFileInput: DeleteFileInput!): User!
  deleteUser(deleteUserInput: DeleteUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type PrivateFile {
  """Creation date"""
  createdAt: DateTime!

  """Date of deletion"""
  deletedAt: DateTime

  """S3 File Key"""
  key: String!

  """File owner"""
  owner: String!

  """Last modification date"""
  updatedAt: DateTime!

  """Pre-signed download URL"""
  url: String

  """UUID"""
  uuid: ID!
}

type PublicFile {
  """Creation date"""
  createdAt: DateTime!

  """Date of deletion"""
  deletedAt: DateTime

  """S3 File Key"""
  key: String!

  """Last modification date"""
  updatedAt: DateTime!

  """Public download URL"""
  url: String!

  """UUID"""
  uuid: ID!
}

type Query {
  allUsers: [User!]!
  getPrivateFile(
    """URL expiration duration (in seconds)"""
    expires: [Float!]
    uuid: ID!
  ): PrivateFile!
  getPublicFile(uuid: ID!): PublicFile!
  myUser: User!
  queryUsers(
    """Sort descending"""
    descending: Boolean = false

    """Search for text withinn items"""
    filter: String

    """Number of images to take"""
    limit: Float = 10

    """Number of items to skip"""
    skip: Float = 0

    """Sort by property"""
    sortBy: String
  ): UserQueryOutput!
  user(cognitoUuid: ID, uuid: ID): User!
  users(uuids: [ID!]): [User!]!
}

input UpdateUserInput {
  email: String
  username: String
  uuid: ID!
}

type User {
  """Cognito UUID"""
  cognitoUuid: String!

  """Creation date"""
  createdAt: DateTime!

  """Date of deletion"""
  deletedAt: DateTime

  """E-mail address"""
  email: String!

  """User role"""
  role: String

  """Last modification date"""
  updatedAt: DateTime!

  """Username"""
  username: String!

  """UUID"""
  uuid: ID!
}

type UserQueryOutput {
  """How many items are found within database"""
  count: String!

  """Users that fit query"""
  data: [User!]!
}
