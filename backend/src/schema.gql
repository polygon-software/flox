# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Address {
  """City"""
  city: String!

  """Creation date"""
  created_at: DateTime!

  """Date of deletion"""
  deleted_at: DateTime

  """Last modification date"""
  last_modified_at: DateTime!

  """Number"""
  number: String!

  """Street"""
  street: String!

  """UUID"""
  uuid: ID!

  """Zip Code"""
  zip_code: String!
}

input AssociateUserInput {
  uuid: ID!
}

type Bank {
  """Three letter abbreviation of the Bank"""
  abbreviation: String!

  """Address"""
  address: Address!

  """Date of account ban (if any)"""
  banned_at: ID

  """Creation date"""
  created_at: DateTime!

  """Date of deletion"""
  deleted_at: DateTime

  """Mail"""
  email: String!

  """First Name"""
  first_name: String!

  """Last modification date"""
  last_modified_at: DateTime!

  """Last Name"""
  last_name: String!

  """Name of the Bank"""
  name: String!

  """Offers made by Bank"""
  offers: [Offer!]!

  """Dossier where the mortgage originally belongs to the bank"""
  own_mortgages: [Dossier!]!

  """Phone Number"""
  phone: String

  """Human-readable ID"""
  readable_id: String!

  """UUID"""
  uuid: ID!
}

type Company {
  """Date of account ban (if any)"""
  banned_at: ID

  """Branch structure"""
  branch_structure: Boolean!

  """Company Name"""
  company_name: String!

  """Correspondence address"""
  correspondence_address: Address!

  """Creation date"""
  created_at: DateTime!

  """Stage of the creation process"""
  creation_state: creationState!

  """Date of deletion"""
  deleted_at: DateTime

  """Documents of the company"""
  documents: [PrivateFile!]

  """Domicile address"""
  domicile_address: Address!

  """Mail"""
  email: String!

  """Employees of the company"""
  employees: [Employee!]

  """First Name"""
  first_name: String!

  """Language"""
  language: String!

  """Last modification date"""
  last_modified_at: DateTime!

  """Last Name"""
  last_name: String!

  """Phone Number"""
  phone: String!

  """Human-readable ID"""
  readable_id: String!

  """Company UID"""
  uid: String!

  """UUID"""
  uuid: ID!
}

input CreateAddressInput {
  city: String!
  number: String!
  street: String!
  zip_code: String!
}

input CreateBankInput {
  abbreviation: String!
  address: CreateAddressInput!

  """E-mail"""
  email: String

  """First Name"""
  first_name: String

  """Last Name"""
  last_name: String
  name: String!
  password: String!

  """Phone Number"""
  phone: String!
}

input CreateCompanyInput {
  branch_structure: Boolean!
  company_name: String!
  correspondence_address: CreateAddressInput!
  domicile_address: CreateAddressInput!

  """E-mail"""
  email: String

  """First Name"""
  first_name: String
  language: String!

  """Last Name"""
  last_name: String
  phone: String!
  uid: String
}

input CreateDossierInput {
  address: CreateAddressInput!
  affordability: Float!
  alimony: Float!
  amortisation_amount: Float
  assets: Float!
  birthdate: DateTime!
  bonus: Float!
  building_lease_expiration_date: DateTime
  building_lease_interest: Float
  child_allowances: Float!
  credit: Float!
  direct_amortisation: Boolean
  eligible_income: Float!
  email: String!
  enfeoffment_estimate_high: Float!
  enfeoffment_estimate_low: Float!
  first_name: String!
  has_amortisation: Boolean!
  has_building_lease: Boolean!
  has_renovation: Boolean!
  incomes: [Float!]!
  last_name: String!
  leasing: Float!
  loss_certificates: Boolean!
  market_value_estimation: Float!
  mortgage_amount: Float!
  non_arrangeable: Boolean!
  original_bank_abbreviation: String!
  original_bank_name: String!
  owner_occupied: Boolean!
  partition_amounts: [Float!]!
  partition_dates: [DateTime!]!
  phone: String!
  property_type: propertyType!
  prosecutions: Boolean!
  public_landlord: Boolean
  purchase_date: DateTime!
  purchase_price: Float!
  renovation_price: Float
  renovation_year: Float
  total_costs: Float!
  value_estimate_high: Float!
  value_estimate_low: Float!
  various: Float!
}

input CreateEmployeeInput {
  """E-mail"""
  email: String

  """First Name"""
  first_name: String

  """Function within the company"""
  function: String!

  """Gender"""
  gender: String!

  """Language"""
  language: String!

  """Last Name"""
  last_name: String

  """Phone Number"""
  phone: String!
}

input CreateOfferInput {
  bank_uuid: String!
  dossier_uuid: String!
}

input CreateSoiAdminInput {
  """E-mail"""
  email: String

  """First Name"""
  first_name: String

  """Last Name"""
  last_name: String
}

input CreateSoiEmployeeInput {
  """E-mail"""
  email: String

  """First Name"""
  first_name: String

  """Gender"""
  gender: String!

  """Last Name"""
  last_name: String

  """Phone Number"""
  phone: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteCompanyInput {
  uuid: ID!
}

input DisableUserInput {
  """Role of the User"""
  role: Roles!
  uuid: ID!
}

type Dossier {
  """Address"""
  address: Address!

  """Calculated affordability"""
  affordability: Float!

  """Alimony cost"""
  alimony: Float!

  """Amount of property amortisation"""
  amortisation_amount: Float

  """Amount of assets"""
  assets: Float!

  """Date of account ban (if any)"""
  banned_at: ID

  """Date of birth of customer"""
  birthdate: DateTime!

  """Bonus payments"""
  bonus: Float!

  """Building lease expiration date"""
  building_lease_expiration_date: DateTime

  """Amount of building lease interest"""
  building_lease_interest: Float

  """Child allowances"""
  child_allowances: Float!

  """Creation date"""
  created_at: DateTime!

  """Credit cost"""
  credit: Float!

  """Date of deletion"""
  deleted_at: DateTime

  """Whether the property amortisation is direct"""
  direct_amortisation: Boolean

  """Documents of the dossier"""
  documents: [PrivateFile!]

  """Total eligible income"""
  eligible_income: Float!

  """Mail"""
  email: String!

  """Employee who created the Dossier"""
  employee: Employee!

  """Enfeoffment for higher value estimate"""
  enfeoffment_estimate_high: Float!

  """Enfeoffment for lower value estimate"""
  enfeoffment_estimate_low: Float!

  """Final summary document, to be signed by customer"""
  final_document: PrivateFile

  """First Name"""
  first_name: String!

  """Whether the property has amortisation"""
  has_amortisation: Boolean!

  """Whether the property has a building lease"""
  has_building_lease: Boolean!

  """Whether the property has been renovated"""
  has_renovation: Boolean!

  """Owners gross incomes"""
  incomes: [Float!]!

  """Last modification date"""
  last_modified_at: DateTime!

  """Last Name"""
  last_name: String!

  """Leasing cost"""
  leasing: Float!

  """Whether loss certificates exist on the property"""
  loss_certificates: Boolean!

  """Current market value estimate"""
  market_value_estimation: Float!

  """Current mortgage amount"""
  mortgage_amount: Float!

  """ToDo"""
  non_arrangeable: Boolean!

  """List of Offers"""
  offers: [Offer!]

  """Previous Bank of the customer"""
  original_bank: Bank!

  """Whether the property is inhabited by its owner"""
  owner_occupied: Boolean!

  """Mortgage partition amounts"""
  partition_amounts: [Float!]!

  """Mortgage partition expiration dates"""
  partition_dates: [DateTime!]!

  """Phone number"""
  phone: String!

  """Property type"""
  property_type: propertyType!

  """Whether there are ongoing prosecutions against the owner"""
  prosecutions: Boolean!

  """Whether the building lease landlord is public"""
  public_landlord: Boolean

  """Date of initial purchase"""
  purchase_date: DateTime!

  """Price of initial purchase"""
  purchase_price: Float!

  """Human-readable ID"""
  readable_id: String!

  """Price of property renovation"""
  renovation_price: Float

  """Year of property renovation"""
  renovation_year: Float

  """Status of Dossier"""
  status: DossierStatus!

  """Total calculated costs"""
  total_costs: Float!

  """UUID"""
  uuid: ID!

  """Higher market value estimate"""
  value_estimate_high: Float!

  """Lower market value estimate"""
  value_estimate_low: Float!

  """Various costs"""
  various: Float!
}

enum DossierStatus {
  COMPLETED
  IN_PROGRESS
  OFFERED
  OPEN
  REJECTED
  SENT
  SIGNED
  SUBMITTED
}

type Employee {
  """Date of account ban (if any)"""
  banned_at: ID

  """Company"""
  company: Company!

  """Creation date"""
  created_at: DateTime!

  """Date of deletion"""
  deleted_at: DateTime

  """Dossiers of employee"""
  dossiers: [Dossier!]!

  """Mail"""
  email: String!

  """First Name"""
  first_name: String!

  """Function within the company"""
  function: String!

  """Gender"""
  gender: String!

  """Language"""
  language: String!

  """Last modification date"""
  last_modified_at: DateTime!

  """Last Name"""
  last_name: String!

  """Phone Number"""
  phone: String!

  """Human-readable ID"""
  readable_id: String!

  """UUID"""
  uuid: ID!
}

enum FileType {
  ADDITIONAL_DOCUMENTS
  BUILDING_DESCRIPTION
  BUILDING_INSURANCE
  CREDIT_CONTRACT
  DEBT_COLLECTION
  DUMMY
  FLOOR_PLANS
  ID
  LAND_REGISTER_EXTRACT
  LAST_YEAR_SALARY
  LAST_YEAR_TAX
  LEASING_CONTRACT
  LEGACY_CADASTER
  LIFE_INSURANCE
  LOG
  MANAGEMENT_REGULATIONS
  MARKET_VALUE_ESTIMATE
  MARRIAGE_CONTRACT
  MORTGAGE_CONTRACT
  NONE
  OWNER_REGULATIONS
  OWN_FUNDS
  PENSION
  PENSION_ID
  PICTURES
  PRODUCT_AGREEMENT
  PURCHASE_CONTRACT
  RENOVATIONS
  RESERVATION_CONTRACT
  SALARY
  SALES_DOCUMENTATION
  SITUATION_PLAN
  THREE_A
  WORK_CONTRACT
}

input GetDossierInput {
  uuid: ID!
}

type Mutation {
  associateUserToCompany(associateUserInput: AssociateUserInput!): Company!
  createBank(createBankInput: CreateBankInput!): Bank!
  createCompany(createCompanyInput: CreateCompanyInput!): Company!
  createDossier(createDossierInput: CreateDossierInput!): Dossier!
  createEmployee(createEmployeeInput: CreateEmployeeInput!): Employee!
  createOffer(createOfferInput: CreateOfferInput!): Dossier!
  createSoiAdmin(createSoiAdminInput: CreateSoiAdminInput!): SoiAdmin!
  createSoiEmployee(createSoiEmployeeInput: CreateSoiEmployeeInput!): SoiEmployee!
  disableUser(disableUserInput: DisableUserInput!): PersonType!
  enableCompanyDocumentUpload(uuid: String!): Company!
  rejectCompany(deleteCompanyInput: DeleteCompanyInput!): Company!
  removeCompany(deleteCompanyInput: DeleteCompanyInput!): Company!
  removeDossierFiles(removeDossierFilesInput: RemoveDossierFilesInput!): Dossier!
  resetDossier(resetDossierInput: ResetDossierInput!): Dossier!
  sendDossierDocumentEmail(sendDossierDocumentInput: SendDossierDocumentInput!): Dossier!
  updateCompany(updateCompanyInput: UpdateCompanyInput!): Company!
  updateDossier(updateDossierInput: UpdateDossierInput!): Dossier!
  updateDossierStatus(updateDossierStatusInput: UpdateDossierStatusInput!): Dossier!
  updateEmployee(updateEmployeeInput: UpdateEmployeeInput!): Employee!
  updateOfferStatus(updateOfferStatusInput: UpdateOfferStatusInput!): Dossier!
}

type Offer {
  """Bank making the offer"""
  bank: Bank!

  """Creation date"""
  created_at: DateTime!

  """Date of deletion"""
  deleted_at: DateTime

  """The Offer as a PDF"""
  documents: [PrivateFile!]

  """Dossier of Offer"""
  dossier: Dossier!

  """Last modification date"""
  last_modified_at: DateTime!

  """Reason the offer was rejected (if it was rejected)"""
  reject_reason: String

  """Status of the offer"""
  status: OfferStatus!

  """UUID"""
  uuid: ID!
}

enum OfferStatus {
  ACCEPTED
  INTERESTED
  IN_PROCESS
  RETRACTED
}

union PersonType = Bank | Company | Employee | SoiEmployee

type PrivateFile {
  """Company the file belongs to"""
  company: Company

  """Creation date"""
  created_at: DateTime!

  """Date of deletion"""
  deleted_at: DateTime

  """Dossier the file belongs to"""
  dossier: Dossier

  """Type of the File"""
  file_type: FileType!

  """S3 File Key"""
  key: String!

  """Last modification date"""
  last_modified_at: DateTime!

  """Offer the file belongs to"""
  offer: Offer

  """File owner"""
  owner: String!

  """Pre-signed download URL"""
  url: String

  """UUID"""
  uuid: ID!
}

type PublicFile {
  """Creation date"""
  created_at: DateTime!

  """Date of deletion"""
  deleted_at: DateTime

  """S3 File Key"""
  key: String!

  """Last modification date"""
  last_modified_at: DateTime!

  """Public download URL"""
  url: String!

  """UUID"""
  uuid: ID!
}

type Query {
  allCompanies: [Company!]!
  allDossiersBank(bankUuid: String): [Dossier!]!
  allEmployees: [Employee!]!
  allSoiEmployees: [SoiEmployee!]!
  allUsers: [User!]!
  companies(uuids: [ID!]): [Company!]!
  company(cognito_id: ID, uuid: ID): Company!
  getAllDossiers: [Dossier!]
  getBank(uuid: ID!): Bank!
  getBankList: [Bank!]!
  getBankNameSuggestions: [Bank!]!
  getBanks: [Bank!]!
  getDossier(getDossierInput: GetDossierInput!): Dossier!
  getDossierDocument(
    """URL expiration duration (in seconds); defaults to 15min"""
    expires: [Float!]
    uuid: ID!
  ): PrivateFile!
  getEmployee(uuid: ID!): Employee!
  getLogs(end: DateTime!, start: DateTime!): [PrivateFile!]!
  getMyBank(bankUuid: String): Bank!
  getMyCompany(companyUuid: String): Company!
  getMyDossiers(employeeUuid: String): [Dossier!]
  getMyEmployee: Employee!
  getMyEmployees(companyUuid: String): [Employee!]!
  getMyUser: User!
  getOfferDocument(
    """URL expiration duration (in seconds); defaults to 15min"""
    expires: [Float!]
    uuid: ID!
  ): PrivateFile!
  getPrivateFile(
    """URL expiration duration (in seconds); defaults to 15min"""
    expires: [Float!]
    uuid: ID!
  ): PrivateFile!
  getPublicFile(uuid: ID!): PublicFile!
  getRejectedDossiers: [Dossier!]
  user(uuid: ID!): User!
  users(uuids: [ID!]): [User!]!
}

input RemoveDossierFilesInput {
  fileUuids: [ID!]!
  uuid: ID!
}

input ResetDossierInput {
  uuid: ID!
}

enum Roles {
  BANK
  COMPANY
  EMPLOYEE
  NONE
  SOI_ADMIN
  SOI_EMPLOYEE
}

input SendDossierDocumentInput {
  fileUuid: ID!
  recipients: [String!]!
  uuid: ID!
}

type SoiAdmin {
  """Date of account ban (if any)"""
  banned_at: ID

  """Creation date"""
  created_at: DateTime!

  """Date of deletion"""
  deleted_at: DateTime

  """Mail"""
  email: String!

  """First Name"""
  first_name: String!

  """Last modification date"""
  last_modified_at: DateTime!

  """Last Name"""
  last_name: String!

  """Human-readable ID"""
  readable_id: String!

  """UUID"""
  uuid: ID!
}

type SoiEmployee {
  """Date of account ban (if any)"""
  banned_at: ID

  """Creation date"""
  created_at: DateTime!

  """Date of deletion"""
  deleted_at: DateTime

  """Mail"""
  email: String!

  """First Name"""
  first_name: String!

  """Gender"""
  gender: String!

  """Last modification date"""
  last_modified_at: DateTime!

  """Last Name"""
  last_name: String!

  """Phone Number"""
  phone: String!

  """Human-readable ID"""
  readable_id: String!

  """UUID"""
  uuid: ID!
}

input UpdateCompanyInput {
  branch_structure: Boolean
  company_name: String
  correspondence_address: CreateAddressInput
  creation_state: creationState
  domicile_address: CreateAddressInput
  email: String
  first_name: String
  language: String
  last_name: String
  phone: String
  uid: String
  uuid: ID!
}

input UpdateDossierInput {
  born: DateTime

  """E-mail"""
  email: String

  """First Name"""
  first_name: String

  """Last Name"""
  last_name: String
  loan_sum: Float
  non_arrangeable: Boolean
  status: DossierStatus
  uuid: ID!
}

input UpdateDossierStatusInput {
  status: DossierStatus!
  uuid: ID!
}

input UpdateEmployeeInput {
  """E-mail"""
  email: String
  first_name: String
  function: String
  gender: String
  language: String
  last_name: String
  phone: String
  uuid: ID
}

input UpdateOfferStatusInput {
  dossier_uuid: ID!
  offer_uuid: ID!
  reject_reason: String
  status: OfferStatus!
}

type User {
  """Creation date"""
  created_at: DateTime!

  """Date of deletion"""
  deleted_at: DateTime

  """UUID of the specific entity"""
  fk: ID!

  """Last modification date"""
  last_modified_at: DateTime!

  """Role of the User"""
  role: Roles!

  """Cognito ID"""
  uuid: ID!
}

enum creationState {
  APPLIED
  AWAITING_DOCUMENTS
  DOCUMENTS_UPLOADED
  DONE
}

enum propertyType {
  APARTMENT
  APARTMENT_BUILDING
  ONE_FAMILY_HOUSE
}
