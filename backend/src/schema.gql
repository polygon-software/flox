# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddUserPermissionInput {
  """Name of the permitted resource"""
  resource: String!

  """Permission Type"""
  type: Permission!

  """User UUID"""
  uuid: ID!
}

type Address {
  """City"""
  city: String!

  """Creation date"""
  createdAt: DateTime!

  """Date of deletion"""
  deletedAt: DateTime

  """Last modification date"""
  lastModifiedAt: DateTime!

  """Number"""
  number: String!

  """Street"""
  street: String!

  """UUID"""
  uuid: ID!

  """Zip Code"""
  zipCode: String!
}

input AssignDeviceToProjectInput {
  """Device CLI"""
  cli: String

  """Project UUID"""
  uuid: ID!
}

type Bank {
  """Three letter abbreviation of the Bank"""
  abbreviation: String!

  """Address"""
  address: Address!

  """Date of account ban (if any)"""
  banned_at: ID

  """Creation date"""
  createdAt: DateTime!

  """Date of deletion"""
  deletedAt: DateTime

  """Mail"""
  email: String!

  """First Name"""
  first_name: String!

  """Last modification date"""
  lastModifiedAt: DateTime!

  """Last Name"""
  last_name: String!

  """Name of the Bank"""
  name: String!

  """Offers made by Bank"""
  offers: [Offer!]!

  """Dossier where the mortgage originally belongs to the bank"""
  own_mortgages: [Dossier!]!

  """Phone Number"""
  phone: String

  """Human-readable ID"""
  readable_id: String!

  """UUID"""
  uuid: ID!
}

type Company {
  """Date of account ban (if any)"""
  banned_at: ID

  """Branch structure"""
  branch_structure: Boolean!

  """Company Name"""
  company_name: String!

  """Correspondence address"""
  correspondence_address: Address!

  """Creation date"""
  createdAt: DateTime!

  """Stage of the creation process"""
  creation_state: creationState!

  """Date of deletion"""
  deletedAt: DateTime

  """Documents of the company"""
  documents: [PrivateFile!]

  """Domicile address"""
  domicile_address: Address!

  """Mail"""
  email: String!

  """Employees of the company"""
  employees: [Employee!]

  """First Name"""
  first_name: String!

  """Language"""
  language: String!

  """Last modification date"""
  lastModifiedAt: DateTime!

  """Last Name"""
  last_name: String!

  """Phone Number"""
  phone: String!

  """Human-readable ID"""
  readable_id: String!

  """Company UID"""
  uid: String!

  """UUID"""
  uuid: ID!
}

input CreateAddressInput {
  city: String!
  number: String!
  street: String!
  zipCode: String!
}

input CreateProjectInput {
  """Associated MR2000 instances"""
  mr2000instances: [String!]

  """Associated MR3000 instances"""
  mr3000instances: [String!]

  """Project name"""
  name: String!

  """Uuid of the user owning the project"""
  userUuid: ID!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteProjectInput {
  """Project UUID"""
  uuid: ID!
}

union Device = MR2000 | MR3000

type DeviceParams {
  ala1X: Float!
  ala1Y: Float!
  ala1Z: Float!
  ala2X: Float!
  ala2Y: Float!
  ala2Z: Float!
  trigX: Float!
  trigY: Float!
  trigZ: Float!
  unitX: String!
  unitY: String!
  unitZ: String!
}

type Dossier {
  """Address"""
  address: Address!

  """Calculated affordability"""
  affordability: Float!

  """Alimony cost"""
  alimony: Float!

  """Amount of property amortisation"""
  amortisation_amount: Float

  """Amount of assets"""
  assets: Float!

  """Date of account ban (if any)"""
  banned_at: ID

  """Date of birth of customer"""
  birthdate: DateTime!

  """Bonus payments"""
  bonus: Float!

  """Building lease expiration date"""
  building_lease_expiration_date: DateTime

  """Amount of building lease interest"""
  building_lease_interest: Float

  """Child allowances"""
  child_allowances: Float!

  """Creation date"""
  createdAt: DateTime!

  """Credit cost"""
  credit: Float!

  """Date of deletion"""
  deletedAt: DateTime

  """Whether the property amortisation is direct"""
  direct_amortisation: Boolean

  """Documents of the dossier"""
  documents: [PrivateFile!]

  """Total eligible income"""
  eligible_income: Float!

  """Mail"""
  email: String!

  """Employee who created the Dossier"""
  employee: Employee!

  """Enfeoffment for higher value estimate"""
  enfeoffment_estimate_high: Float!

  """Enfeoffment for lower value estimate"""
  enfeoffment_estimate_low: Float!

  """Final summary document, to be signed by customer"""
  final_document: PrivateFile

  """First Name"""
  first_name: String!

  """Whether the property has amortisation"""
  has_amortisation: Boolean!

  """Whether the property has a building lease"""
  has_building_lease: Boolean!

  """Whether the property has been renovated"""
  has_renovation: Boolean!

  """Owners gross incomes"""
  incomes: [Float!]!

  """Last modification date"""
  lastModifiedAt: DateTime!

  """Last Name"""
  last_name: String!

  """Leasing cost"""
  leasing: Float!

  """Whether loss certificates exist on the property"""
  loss_certificates: Boolean!

  """Current market value estimate"""
  market_value_estimation: Float!

  """Current mortgage amount"""
  mortgage_amount: Float!

  """ToDo"""
  non_arrangeable: Boolean!

  """List of Offers"""
  offers: [Offer!]

  """Previous Bank of the customer"""
  original_bank: Bank!

  """Whether the property is inhabited by its owner"""
  owner_occupied: Boolean!

  """Mortgage partition amounts"""
  partition_amounts: [Float!]!

  """Mortgage partition expiration dates"""
  partition_dates: [DateTime!]!

  """Phone number"""
  phone: String!

  """Property type"""
  property_type: propertyType!

  """Whether there are ongoing prosecutions against the owner"""
  prosecutions: Boolean!

  """Whether the building lease landlord is public"""
  public_landlord: Boolean

  """Date of initial purchase"""
  purchase_date: DateTime!

  """Price of initial purchase"""
  purchase_price: Float!

  """Human-readable ID"""
  readable_id: String!

  """Price of property renovation"""
  renovation_price: Float

  """Year of property renovation"""
  renovation_year: Float

  """Status of Dossier"""
  status: DossierStatus!

  """Total calculated costs"""
  total_costs: Float!

  """UUID"""
  uuid: ID!

  """Higher market value estimate"""
  value_estimate_high: Float!

  """Lower market value estimate"""
  value_estimate_low: Float!

  """Various costs"""
  various: Float!
}

enum DossierStatus {
  COMPLETED
  IN_PROGRESS
  OFFERED
  OPEN
  REJECTED
  SENT
  SIGNED
  SUBMITTED
}

type Employee {
  """Date of account ban (if any)"""
  banned_at: ID

  """Company"""
  company: Company!

  """Creation date"""
  createdAt: DateTime!

  """Date of deletion"""
  deletedAt: DateTime

  """Dossiers of employee"""
  dossiers: [Dossier!]!

  """Mail"""
  email: String!

  """First Name"""
  first_name: String!

  """Function within the company"""
  function: String!

  """Gender"""
  gender: String!

  """Language"""
  language: String!

  """Last modification date"""
  lastModifiedAt: DateTime!

  """Last Name"""
  last_name: String!

  """Phone Number"""
  phone: String!

  """Human-readable ID"""
  readable_id: String!

  """UUID"""
  uuid: ID!
}

enum FileType {
  ADDITIONAL_DOCUMENTS
  BUILDING_DESCRIPTION
  BUILDING_INSURANCE
  CREDIT_CONTRACT
  DEBT_COLLECTION
  DUMMY
  FLOOR_PLANS
  ID
  LAND_REGISTER_EXTRACT
  LAST_YEAR_SALARY
  LAST_YEAR_TAX
  LEASING_CONTRACT
  LEGACY_CADASTER
  LIFE_INSURANCE
  LOG
  MANAGEMENT_REGULATIONS
  MARKET_VALUE_ESTIMATE
  MARRIAGE_CONTRACT
  MORTGAGE_CONTRACT
  NONE
  OWNER_REGULATIONS
  OWN_FUNDS
  PENSION
  PENSION_ID
  PICTURES
  PRODUCT_AGREEMENT
  PURCHASE_CONTRACT
  RENOVATIONS
  RESERVATION_CONTRACT
  SALARY
  SALES_DOCUMENTATION
  SITUATION_PLAN
  THREE_A
  WORK_CONTRACT
}

type LevelWriting {
  """Max value"""
  max: Float!

  """X-axes"""
  x: [LevelWritingAxis!]!

  """Y-axes"""
  y: [LevelWritingAxis!]!

  """Z-axes"""
  z: [LevelWritingAxis!]!
}

type LevelWritingAxis {
  """Data Points"""
  data: [LevelWritingPoint!]!

  """Station ID"""
  name: String!
}

type LevelWritingPoint {
  """Timestamp"""
  x: DateTime!

  """Value"""
  y: Float
}

type MR2000 {
  """CLI ID"""
  cli: String!

  """Firmware version"""
  firmware: String!

  """FTP forward status"""
  ftp: Boolean!

  """IP address, if any"""
  ip: String

  """Device name"""
  name: String!

  """Number of files"""
  numberOfFiles: Float!

  """PID"""
  pid: String!

  """Project the device belongs to (if any)"""
  project: Project

  """Serial number"""
  serialNumber: String!
}

type MR3000 {
  """CLI ID"""
  cli: String!

  """Firmware version"""
  firmware: String!

  """FTP forward status"""
  ftp: Boolean!

  """IP address, if any"""
  ip: String

  """Device name"""
  name: String!

  """Project the device belongs to (if any)"""
  project: Project

  """Serial number"""
  serialNumber: String!
}

type Mutation {
  addPermission(addUserPermissionInput: AddUserPermissionInput!): User!
  assignDeviceToProject(assignDeviceToProjectInput: AssignDeviceToProjectInput!): Project!
  createProject(createProjectInput: CreateProjectInput!): Project!
  deleteProject(deleteProjectInput: DeleteProjectInput!): Project!
  register(registerUserInput: RegisterUserInput!): User
  removeDeviceFromProject(removeDeviceFromProjectInput: RemoveDeviceFromProjectInput!): Project!
  updateProjectName(updateProjectInput: UpdateProjectInput!): Project!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Offer {
  """Bank making the offer"""
  bank: Bank!

  """Creation date"""
  createdAt: DateTime!

  """Date of deletion"""
  deletedAt: DateTime

  """The Offer as a PDF"""
  documents: [PrivateFile!]

  """Dossier of Offer"""
  dossier: Dossier!

  """Last modification date"""
  lastModifiedAt: DateTime!

  """Reason the offer was rejected (if it was rejected)"""
  reject_reason: String

  """Status of the offer"""
  status: OfferStatus!

  """UUID"""
  uuid: ID!
}

enum OfferStatus {
  ACCEPTED
  INTERESTED
  IN_PROCESS
  RETRACTED
}

enum Permission {
  MR2000
  MR3000
  PROJECT
}

type PrivateFile {
  """Company the file belongs to"""
  company: Company

  """Creation date"""
  createdAt: DateTime!

  """Date of deletion"""
  deletedAt: DateTime

  """Dossier the file belongs to"""
  dossier: Dossier

  """Type of the File"""
  file_type: FileType!

  """S3 File Key"""
  key: String!

  """Last modification date"""
  lastModifiedAt: DateTime!

  """Offer the file belongs to"""
  offer: Offer

  """File owner"""
  owner: String!

  """Pre-signed download URL"""
  url: String

  """UUID"""
  uuid: ID!
}

type Project {
  """Creation date"""
  createdAt: DateTime!

  """Date of deletion"""
  deletedAt: DateTime

  """Last modification date"""
  lastModifiedAt: DateTime!

  """MR2000 instances that the user has access to"""
  mr2000instances: [String!]

  """MR3000 instances that the user has access to"""
  mr3000instances: [String!]

  """Project Name"""
  name: String!

  """User that owns the project"""
  user: User!

  """UUID"""
  uuid: ID!
}

type Query {
  allUsers: [User!]!
  deviceParams(cli: String!): DeviceParams!
  getProjectDevices(name: String, uuid: ID): [Device!]!
  getUserDevices(assigned: Boolean, unassigned: Boolean, uuid: ID!): [Device!]!
  getUserProjects(uuid: ID!): [Project!]!
  isEmailAllowed(email: String!): Boolean!
  levelWriting(clients: [String!]!, end: DateTime!, resolution: Int!, start: DateTime!): LevelWriting!
  myDevices(assigned: Boolean, unassigned: Boolean): [Device!]!
  myProjects: [Project!]!
  myUser: User!
  user(cognitoUuid: ID, uuid: ID): User!
}

input RegisterUserInput {
  """User address"""
  address: CreateAddressInput

  """Date of birth"""
  birthdate: DateTime

  """Cognito ID"""
  cognitoUuid: ID!

  """E-mail address"""
  email: String!

  """Full name of the user"""
  fullName: String

  """phone number"""
  phone: String

  """Username"""
  username: String!
}

input RemoveDeviceFromProjectInput {
  """Device CLI"""
  cli: String

  """Project UUID"""
  uuid: ID!
}

enum Role {
  ADMIN
  USER
}

input UpdateProjectInput {
  """Project name"""
  name: String!

  """Project UUID"""
  uuid: ID!
}

input UpdateUserInput {
  uuid: ID!
}

type User {
  """Domicile address"""
  address: Address!

  """Date of birth"""
  birthdate: DateTime!

  """Cognito user UUID"""
  cognitoUuid: ID!

  """Creation date"""
  createdAt: DateTime!

  """Date of deletion"""
  deletedAt: DateTime

  """E-mail"""
  email: String!

  """Full name"""
  fullName: String!

  """Last modification date"""
  lastModifiedAt: DateTime!

  """MR2000 instances that the user has access to"""
  mr2000instances: [String!]

  """MR3000 instances that the user has access to"""
  mr3000instances: [String!]

  """Phone number"""
  phone: String!

  """Projects that the user has access to"""
  projects: [Project!]

  """Role of the User"""
  role: Role!

  """Username"""
  username: String!

  """UUID"""
  uuid: ID!
}

enum creationState {
  APPLIED
  AWAITING_DOCUMENTS
  DOCUMENTS_UPLOADED
  DONE
}

enum propertyType {
  APARTMENT
  APARTMENT_BUILDING
  ONE_FAMILY_HOUSE
}
