# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddUserPermissionInput {
  """Name of the permitted resource"""
  resource: String!

  """Permission Type"""
  type: Permission!

  """User UUID"""
  uuid: ID!
}

type Address {
  """City"""
  city: String!

  """Creation date"""
  createdAt: DateTime!

  """Date of deletion"""
  deletedAt: DateTime

  """Last modification date"""
  lastModifiedAt: DateTime!

  """Number"""
  number: String!

  """Street"""
  street: String!

  """UUID"""
  uuid: ID!

  """Zip Code"""
  zipCode: String!
}

input CreateAddressInput {
  city: String!
  number: String!
  street: String!
  zipCode: String!
}

input CreateProjectInput {
  """Associated MR2000 instances"""
  mr2000instances: [String!]

  """Associated MR3000 instances"""
  mr3000instances: [String!]

  """Project name"""
  name: String!

  """Uuid of the user owning the project"""
  userUuid: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

union Device = MR2000 | MR3000

type DeviceParams {
  ala1X: Float!
  ala1Y: Float!
  ala1Z: Float!
  ala2X: Float!
  ala2Y: Float!
  ala2Z: Float!
  trigX: Float!
  trigY: Float!
  trigZ: Float!
  unitX: String!
  unitY: String!
  unitZ: String!
}

type LevelWriting {
  """Max value"""
  max: Float!

  """X-axes"""
  x: [LevelWritingAxis!]!

  """Y-axes"""
  y: [LevelWritingAxis!]!

  """Z-axes"""
  z: [LevelWritingAxis!]!
}

type LevelWritingAxis {
  """Data Points"""
  data: [LevelWritingPoint!]!

  """Station ID"""
  name: String!
}

type LevelWritingPoint {
  """Timestamp"""
  x: DateTime!

  """Value"""
  y: Float
}

type MR2000 {
  """CLI ID"""
  cli: String!

  """Firmware version"""
  firmware: String!

  """FTP forward status"""
  ftp: Boolean!

  """IP address, if any"""
  ip: String

  """Device name"""
  name: String!

  """Number of files"""
  numberOfFiles: Float!

  """PID"""
  pid: String!

  """Project the device belongs to (if any)"""
  project: Project

  """Serial number"""
  serialNumber: String!
}

type MR3000 {
  """CLI ID"""
  cli: String!

  """Firmware version"""
  firmware: String!

  """FTP forward status"""
  ftp: Boolean!

  """IP address, if any"""
  ip: String

  """Device name"""
  name: String!

  """Project the device belongs to (if any)"""
  project: Project

  """Serial number"""
  serialNumber: String!
}

type Mutation {
  addPermission(addUserPermissionInput: AddUserPermissionInput!): User!
  createProject(createProjectInput: CreateProjectInput!): Project!
  register(registerUserInput: RegisterUserInput!): User
  updateProjectName(updateProjectInput: UpdateProjectInput!): Project!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

enum Permission {
  MR2000
  MR3000
  PROJECT
}

type Project {
  """Creation date"""
  createdAt: DateTime!

  """Date of deletion"""
  deletedAt: DateTime

  """Last modification date"""
  lastModifiedAt: DateTime!

  """MR2000 instances that the user has access to"""
  mr2000instances: [String!]

  """MR3000 instances that the user has access to"""
  mr3000instances: [String!]

  """Project Name"""
  name: String!

  """User that owns the project"""
  user: User!

  """UUID"""
  uuid: ID!
}

type Query {
  allUsers: [User!]!
  deviceParams(cli: String!): DeviceParams!
  getProjectDevices(uuid: ID!): [Device!]!
  getUserDevices(assigned: Boolean, unassigned: Boolean, uuid: ID!): [Device!]!
  getUserProjects(uuid: ID!): [Project!]!
  isEmailAllowed(email: String!): Boolean!
  levelWriting(clients: [String!]!, end: DateTime!, resolution: Int!, start: DateTime!): LevelWriting!
  myDevices(assigned: Boolean, unassigned: Boolean): [Device!]!
  myProjects: [Project!]!
  myUser: User!
  user(cognitoUuid: ID, uuid: ID): User!
}

input RegisterUserInput {
  """User address"""
  address: CreateAddressInput

  """Date of birth"""
  birthdate: DateTime

  """Cognito ID"""
  cognitoUuid: ID!

  """E-mail address"""
  email: String!

  """Full name of the user"""
  fullName: String

  """phone number"""
  phone: String

  """Username"""
  username: String!
}

enum Role {
  ADMIN
  USER
}

input UpdateProjectInput {
  """Project name"""
  name: String!

  """Project UUID"""
  uuid: ID!
}

input UpdateUserInput {
  uuid: ID!
}

type User {
  """Domicile address"""
  address: Address!

  """Date of birth"""
  birthdate: DateTime!

  """Cognito user UUID"""
  cognitoUuid: ID!

  """Creation date"""
  createdAt: DateTime!

  """Date of deletion"""
  deletedAt: DateTime

  """E-mail"""
  email: String!

  """Full name"""
  fullName: String!

  """Last modification date"""
  lastModifiedAt: DateTime!

  """MR2000 instances that the user has access to"""
  mr2000instances: [String!]

  """MR3000 instances that the user has access to"""
  mr3000instances: [String!]

  """Phone number"""
  phone: String!

  """Projects that the user has access to"""
  projects: [Project!]

  """Role of the User"""
  role: Role!

  """Username"""
  username: String!

  """UUID"""
  uuid: ID!
}
