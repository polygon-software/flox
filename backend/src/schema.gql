# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateImageInput {
  file: ID!
}

input CreateUserInput {
  cognitoUuid: String!
  email: String!
  role: String
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteFileInput {
  uuid: ID!
}

input DeleteImageInput {
  uuid: ID!
}

input DeleteUserInput {
  uuid: ID!
}

type Image {
  """Creation date"""
  createdAt: DateTime!

  """Date of deletion"""
  deletedAt: DateTime

  """File"""
  file: PrivateFile!

  """Last modification date"""
  updatedAt: DateTime!

  """UUID"""
  uuid: ID!
}

type Mutation {
  createImage(createImageInput: CreateImageInput!): Image!
  createUser(createUserInput: CreateUserInput!): User!
  deleteImage(deleteImageInput: DeleteImageInput!): Image!
  deletePrivateFile(deleteFileInput: DeleteFileInput!): PrivateFile!
  deletePublicFile(deleteFileInput: DeleteFileInput!): PublicFile!
  deleteUser(deleteUserInput: DeleteUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type PrivateFile {
  """Creation date"""
  createdAt: DateTime!

  """Date of deletion"""
  deletedAt: DateTime

  """Name of S3File"""
  filename: String

  """S3 S3File Key"""
  key: String!

  """Files mime type"""
  mimetype: String!

  """S3File owner"""
  owner: String!

  """Filesize in bytes"""
  size: Float!

  """Last modification date"""
  updatedAt: DateTime!

  """Pre-signed download URL"""
  url: String

  """UUID"""
  uuid: ID!
}

type PublicFile {
  """Creation date"""
  createdAt: DateTime!

  """Date of deletion"""
  deletedAt: DateTime

  """Name of S3File"""
  filename: String

  """S3 S3File Key"""
  key: String!

  """Files mime type"""
  mimetype: String!

  """Filesize in bytes"""
  size: Float!

  """Last modification date"""
  updatedAt: DateTime!

  """Public download URL"""
  url: String!

  """UUID"""
  uuid: ID!
}

type Query {
  allMyFiles(
    """Number of files to load"""
    limit: Int = 500

    """How many files to skip"""
    skip: Int = 0
  ): [PrivateFile!]!
  allPublicFiles(
    """Number of files to load"""
    limit: Int = 500

    """How many files to skip"""
    skip: Int = 0
  ): [PublicFile!]!
  allUsers: [User!]!
  image(
    """URL expiration duration (in seconds)"""
    expires: [Float!]
    uuid: ID!
  ): Image!
  imageForFile(
    """URL expiration duration (in seconds)"""
    expires: [Float!]
    file: ID!
  ): Image!
  myUser: User!
  privateFile(
    """URL expiration duration (in seconds)"""
    expires: Int
    uuid: ID!
  ): PrivateFile!
  publicFile(uuid: ID!): PublicFile!
  user(cognitoUuid: ID, uuid: ID): User!
  users(uuids: [ID!]): [User!]!
}

input UpdateUserInput {
  email: String
  username: String
  uuid: ID!
}

type User {
  """Cognito UUID"""
  cognitoUuid: String!

  """Creation date"""
  createdAt: DateTime!

  """Date of deletion"""
  deletedAt: DateTime

  """E-mail address"""
  email: String!

  """User role"""
  role: String

  """Last modification date"""
  updatedAt: DateTime!

  """Username"""
  username: String!

  """UUID"""
  uuid: ID!
}
