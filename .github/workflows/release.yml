name: "Stage 4: Overwrite Live-Environment with content from Test-Environment"

on:
  release:
    types:
    - published

jobs:
  release:
    name: "Release new LIVE Application"
    runs-on: ubuntu-latest
    steps:

      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Make build.bash executable
        run: sudo chmod +x ./scripts/2_main-setup/build.bash

      - name: Create tf.env
        working-directory: ./scripts/support
        run: sudo bash create-tf-env.sh

      - name: execute build.bash
        working-directory: ./scripts/2_main-setup
        run: sudo bash build.bash live $PROJECT $MODE
        env:
          PROJECT_NAME: flox # TODO from .env
          MODE: SPA # TODO from .env

      - name: terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        working-directory: ./scripts/2_main-setup
        run: terraform init

      - name: Parse main .env file
        id: dotenv
        uses: falti/dotenv-action@master
        with:
          path: frontend/live.env

      # TODO applied correctly?
      - name: Parse terraform .env file
        id: dotenv
        uses: falti/dotenv-action@master
        with:
          path: scripts/support/tf.env

      - name: Terraform Apply
        working-directory: ./scripts/2_main-setup
        run: terraform apply -auto-approve -var type="live" -var user_pool_id="${{ steps.dotenv.outputs.VUE_APP_USER_POOL_ID }}" -var user_pool_client_id="${{ steps.dotenv.outputs.VUE_APP_USER_POOL_CLIENT_ID }}" -var base_domain="${{ steps.dotenv.outputs.VUE_APP_BASE_DOMAIN }}" -var backend_base_domain="${{ steps.dotenv.outputs.VUE_APP_BACKEND_BASE_DOMAIN }}" -var email_sender="${{ steps.dotenv.outputs.VUE_APP_EMAIL_SENDER }}" -var hosted_zone_id="${{ steps.dotenv.outputs.VUE_APP_HOSTED_ZONE_ID }}" -var cognito_arn="${{ steps.dotenv.outputs.COGNITO_ARN }}"

      - name: "Update state of monday.com items to 'Stage 4: Production'"
        uses: polygon-software/action-monday-state@main
#        if: ${{ github.event.release.draft != 'true' }}
        with:
          monday-token: ${{ secrets.MONDAY_TOKEN }}
          multiple: true
          text: ${{ github.event.release.body }}
          prefix: '#'
          status-column-title: 'Item Status!'
          set-status: 'Stage 4: Production'
          allow-no-item-id: true
