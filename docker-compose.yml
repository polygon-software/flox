version: '3.0'
x-aws-loadbalancer: ${AWS_LOADBALANCER}

# This is the docker-compose to be used for AWS ECS Deployment

services:
  backend:
    image: ${DOCKERHUB_USERNAME}/${BACKEND_IMAGE_NAME}:latest
    x-aws-pull_credentials: ${AWS_DOCKERHUB_TOKEN}
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2048m
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    networks:
      - webnet
    depends_on:
      - database

  frontend:
    image: ${DOCKERHUB_USERNAME}/${FRONTEND_IMAGE_NAME}:latest
    x-aws-pull_credentials: ${AWS_DOCKERHUB_TOKEN}
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2048m
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    volumes:
      - data-frontend:frontend/usr/src/app
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    networks:
      - webnet
    depends_on:
      - backend

  database:
    image: postgres:14
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2048m
    networks:
      - webnet
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER:  ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - dbdata:/var/lib/postgresql/data

  #nocodb:
  #  container_name: nocodb
  #  image: nocodb/nocodb:latest
  #  networks:
  #    - webnet
  #  ports:
  #    - ${NOCODB_PORT}:${NOCODB_PORT}
  #  volumes:
  #    - nocodbdata:/usr/app/data
  #  depends_on:
  #    - database

networks:
  webnet:
volumes:
  dbdata:
  #nocodbdata:
  data-frontend:
